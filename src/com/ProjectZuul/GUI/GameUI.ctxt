#BlueJ class context
comment0.target=GameUI
comment0.text=\n\ The\ type\ Game\ ui.\n\n\ @author\ Anne\ Pier\ Merkus\ and\ Richard\ Ringia\n
comment1.params=gui\ gameMode\ language
comment1.target=GameUI(GUI,\ com.ProjectZuul.Enums.GameMode,\ com.ProjectZuul.Enums.Language)
comment1.text=\n\ Instantiates\ a\ new\ Game\ ui.\n\n\ @param\ gui\ \ \ \ \ \ the\ gui\n\ @param\ gameMode\ the\ game\ mode\n\ @param\ language\ the\ language\n
comment10.params=
comment10.target=void\ run()
comment11.params=
comment11.target=void\ setDirectionButtonEnabled()
comment11.text=\n\ Disable\ direction\ buttons\ if\ there\ is\ no\ room\ in\ the\ direction\ of\ that\ button.\n
comment12.params=
comment12.target=void\ setDirectionButtonListeners()
comment12.text=\n\ Listeners\ for\ all\ direction\ buttons.\n
comment13.params=direction
comment13.target=void\ goRoom(java.lang.String)
comment13.text=\n\ Move\ player\ to\ the\ next\ room,\ check\ if\ the\ door\ is\ not\ locked,\ if\ it\ is,\ tell\ them\ to\ find\ a\ key\ to\ get\ in.\n\n\ @param\ direction\ Direction\ to\ move\ to.\n
comment14.params=
comment14.target=void\ goBackRoom()
comment14.text=\n\ Back\ button\ to\ go\ back\ to\ the\ previous\ room.\n
comment15.params=
comment15.target=void\ createInvestigationView()
comment15.text=\n\ Create\ the\ view\ so\ the\ player\ can\ investigate\ the\ room\ for\ items.\n
comment16.params=
comment16.target=void\ setInvestigationItems()
comment16.text=\n\ Add\ items\ to\ the\ investigation\ view\ so\ the\ player\ can\ see\ what\ items\ are\ in\ the\ room\ and\ can\ pick\ them\ up.\n
comment17.params=
comment17.target=void\ createQuitButtons()
comment17.text=\n\ Create\ buttons\ to\ quit\ the\ game\ to\ either\ the\ Main\ Menu\ or\ to\ Desktop.\n
comment18.params=
comment18.target=void\ setCommandButtonListeners()
comment18.text=\n\ Set\ listeners\ for\ all\ command\ buttons.\n
comment19.params=
comment19.target=void\ setQuitButtonListeners()
comment19.text=\n\ Set\ listeners\ for\ quit\ buttons.\n
comment2.params=onQuitListener
comment2.target=void\ addOnQuitListener(Listeners.OnQuitListener)
comment2.text=\n\ Add\ on\ quit\ listeners\ for\ processes\ to\ be\ ended\ when\ the\ game\ is\ finished.\n\n\ @param\ onQuitListener\ Code\ given\ to\ be\ executed\ when\ the\ player\ quits\ the\ game.\n
comment20.params=visibility
comment20.target=void\ setMenuVisibility(boolean)
comment20.text=\n\ Sets\ com.ProjectZuul.com.ProjectZuul.GUI.GUI.GameUI\ visibility.\n\n\ @param\ visibility\ Whether\ the\ menu\ should\ be\ set\ visible\ or\ invisible.\n
comment21.params=holder\ command\ selectedMove
comment21.target=void\ commands(java.awt.Container,\ Components.MyButton,\ boolean)
comment21.text=\n\n\ @param\ holder\ Holder\ corresponding\ to\ the\ command\ button\ currently\ selected.\n\ @param\ command\ Command\ button\ currently\ selected.\n\ @param\ selectedMove\ Whether\ the\ play\ is\ in\ the\ move\ screen\ or\ not.\n
comment22.params=holder
comment22.target=void\ setCurrentSelectedCommandHolder(java.awt.Container)
comment22.text=\n\ Set\ previous\ selected\ command\ holder\ inactive.\n\n\ @param\ holder\ Current\ selected\ holder.\n
comment23.params=command
comment23.target=void\ setCurrentSelectedCommand(Components.MyButton)
comment23.text=\n\ Set\ previous\ selected\ command\ color\ back\ to\ black\ and\ change\ this\ one\ to\ gray\ to\ indicate\ which\ button\ is\ selected.\n\n\ @param\ command\ Current\ selected\ command\n
comment24.params=
comment24.target=void\ createMap()
comment24.text=\n\ Create\ the\ map\ with\ the\ current\ location\ of\ the\ player\ highlighted.\n
comment25.params=
comment25.target=void\ createInventory()
comment25.text=\n\ Create\ the\ inventory\ with\ the\ items\ the\ player\ currently\ possesses.\n
comment26.params=
comment26.target=void\ createActionMenu()
comment26.text=\n\ Create\ the\ action\ menu\ to\ add\ buttons\ to\ when\ the\ player\ wants\ to\ pick\ something\ up\ or\ drop\ something.\n
comment27.params=
comment27.target=com.ProjectZuul.Handlers.GameHandler\ getGameHandler()
comment27.text=\n\ Gets\ instance\ of\ GameHandler.\n\n\ @return\ Instance\ of\ GameHandler.\n
comment28.params=
comment28.target=com.ProjectZuul.Handlers.ActionHandler\ getActionHandler()
comment28.text=\n\ Gets\ instance\ of\ ActionHandler\n\n\ @return\ Instance\ of\ ActionHandler.\n
comment29.params=
comment29.target=com.ProjectZuul.Handlers.InventoryHandler\ getInventoryHandler()
comment29.text=\n\ Gets\ instance\ of\ InventoryHandler.\n\n\ @return\ Instance\ of\ InventoryHandler\n
comment3.params=
comment3.target=void\ createGame()
comment3.text=\n\ Create\ the\ game\ by\ calling\ GameHandler\ and\ setting\ all\ values\ by\ calling\ other\ methods.\n
comment30.params=
comment30.target=com.ProjectZuul.Handlers.MapHandler\ getMapHandler()
comment30.text=\n\ Gets\ instance\ of\ MapHandler.\n\n\ @return\ Instance\ of\ MapHandler.\n
comment31.params=
comment31.target=com.ProjectZuul.Enums.GameMode\ getGameMode()
comment31.text=\n\ Gets\ instance\ of\ GameMode.\n\n\ @return\ Instance\ of\ GameMode.\n
comment32.params=
comment32.target=com.ProjectZuul.Handlers.LanguageHandler\ getLanguageHandler()
comment32.text=\n\ Gets\ instance\ of\ LanguageHandler.\n\n\ @return\ Instance\ of\ LanguageHandler.\n
comment4.params=
comment4.target=void\ setDefaultGameValues()
comment4.text=\n\ Default\ values\ of\ the\ game,\ the\ selected\ command\ buttons\ and\ text\ of\ the\ current\ room.\n
comment5.params=gameMode
comment5.target=void\ setDifficultyValues(com.ProjectZuul.Enums.GameMode)
comment5.text=\n\ Set\ players\ items\ and\ put\ items\ in\ rooms\ depending\ on\ the\ difficulty\ chosen.\n\n\ @param\ gameMode\ Difficulty\ selected\ by\ the\ player\n
comment6.params=
comment6.target=void\ createCommandButtons()
comment6.text=\n\ Create\ the\ command\ buttons\ at\ the\ top\ of\ the\ screen.\n
comment7.params=
comment7.target=void\ createDirectionButtons()
comment7.text=\n\ Create\ buttons\ for\ the\ player\ to\ move\ around\ with.\n
comment8.params=
comment8.target=void\ startTimer()
comment8.text=\n\ Start\ the\ timer\ in\ which\ the\ player\ has\ to\ complete\ the\ game\ before\ they\ lose.\n
comment9.params=victory
comment9.target=void\ fadeGameFinishedScreen(boolean)
comment9.text=\n\ Called\ when\ the\ game\ is\ either\ won\ or\ lost,\ end\ screen\ becomes\ visible\ and\ the\ player\ can\ go\ back\ to\ the\ Main\ Menu\ or\ quit\ the\ game.\n\n\ @see\ FadeController\#start()\n\ @param\ victory\ Whether\ the\ player\ won\ the\ game\ or\ lost\ the\ game.\n
numComments=33
